其他语言SDK
===

### 其他语言SDK

SDK联系人QQ | 语言 | 实现接口 | 源(代)码地址|SDK地址 | 
---|---|---|---|
910139966 | PHP | ALL | https://github.com/justmd5/tencent-ai | 
1361653339 | Golang | ALL | https://github.com/shiguanghuxian/txai | 
1280827369   | NodeJS | 非全部接口实现 | https://www.npmjs.com/package/qqai-api-sdk  
https://github.com/w89612b/qqai-api-sdk | 
1109527533 | Python | ALL | https://gitee.com/french-home/TencentAISDK | 
783021975 | Object-C  | IOS 情感分析接口 | 腾讯AI群文件自行下载 | 
783021975 | Object-C  | IOS 人脸检测(带图片)的接口 | 非免费提供。需要请移步http://taip.mydoc.io/?t=310135 | 
1928881525 | .NET(C#) | OCR接口实现
人脸模块接口实现
语音合成接口实现 | https://gitee.com/yangfubing/Tentcent.Ai.git | 
51015525 | NodeJS | ALL | https://github.com/reezon/tencent-ai-nodejs-sdk | 
835970134 | Java(OkHttp) | 非全部接口实现 | https://github.com/aijingsun6/tecent-ai-java.git | 
707771209 | Android | 智能闲聊
身份证OCR | https://github.com/fire2018/tc_ai_test/ | 
未知 | 微信小程序 | OCR示例代码 | https://github.com/zh8637688/wx-cardscanner | 
783021975 | 微信小程序 | 颜龄检测示例代码 | https://gitee.com/xshuai/smartappdemo | 
1041911384 | .NET(C#) | 具体查看项目README.md说明。比上面的C#的代码全一些哦 | https://github.com/netnr/Netnr.TencentAI | 
1406142870 | .NET(C#) | MD5、URLENCODE工具类代码 | 往下看 | 

### .NET(C#)相关代码

.NET(C#)版获取字符串MD5

```
public static string GetMD5( string str )
{
  MD5    myMD5    = MD5.Create();
  byte[]    data    = myMD5.ComputeHash( Encoding.UTF8.GetBytes( str ) );
  StringBuilder  myBuilder  = new StringBuilder();

  for ( int i = 0; i < data.Length; i++ )
  {
    myBuilder.Append( data[i].ToString( "x2" ) );
  }

  return(myBuilder.ToString() );
}
```

.NET(C#)版UrlEncode

```
public static string UrlEncode(string input)
        {
            StringBuilder newBytes = new StringBuilder();
            var urf8Bytes = Encoding.UTF8.GetBytes(input);

            foreach (var item in urf8Bytes)
            {
                if (IsSpace((char)item))
                {
                    newBytes.Append("+");
                }
                else if (IsReverseChar((char)item))
                {
                    newBytes.Append('%');
                    newBytes.Append(ByteToHex(item).ToUpper());
                }
                else
                {
                    newBytes.Append((char)item);
                }
            }

            return newBytes.ToString();
        }

        private static bool IsReverseChar(char c)
        {
            return !((c >= 'a' &amp;&amp; c <= 'z') || (c >= 'A' &amp;&amp; c <= 'Z') || (c >= '0' &amp;&amp; c <= '9')
                    || c == '-' || c == '_' || c == '.' || c == '~');
        }

        private static bool IsSpace(char c)
        {
            return c == ' ';
        }

        private static string ByteToHex(byte b)
        {
            return b.ToString("x2");
        }
```

